// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id          String @id @default(cuid())
  title       String
  description String
  //relations

  movieTagMovieId String?
  movieTagTagId   String?
  Favorite        Favorite[]
  MovieTag        MovieTag[]
}

model User {
  id        String     @id @default(cuid())
  name      String
  //relations
  movietags MovieTag[]
  favorites Favorite[]
}

model Tag {
  id        String     @id @default(cuid())
  tagText   String
  //relations 
  movieTags MovieTag[]
}

model MovieTag {
  movieId String
  tagId   String
  //relations
  movie   Movie   @relation(fields: [movieId], references: [id], onDelete: Cascade)
  tag     Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)
  User    User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String?

  // constraints 
  @@unique([movieId, tagId])
}

model Favorite {
  userId  String
  movieId String
  //realations
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  movie   Movie  @relation(fields: [movieId], references: [id], onDelete: Cascade)

  //constraints
  @@unique([userId, movieId])
}
